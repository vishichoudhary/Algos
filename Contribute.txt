# Algos
  This repository contains 6 C++ programs that sorts arrays with diffrent algroithms.
  
	Sorting is important in programming for the same reason it is important in everyday
	life. It is easier and faster to locate items in a sorted list than unsorted. 
	Sorting algorithms can be used in a program to sort an array for later searching 
	or writing out to an ordered file or report.
	
	


# Contents
  1. [Bubble Sort](#bubble-sort)
  2. [Heap Sort](#heap-sort)
  3. [Instertion Sort](#insertion-sort)
  4. [Merge Sort](#merge-sort)
  5. [Quick Sort](#quick-sort)
  6. [Selection Sort](#selection-sort)
  
## Bubble Sort
  Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order.

  
## Heap Sort
Heap sort is a comparison based sorting technique based on Binary Heap data structure. It is similar to selection sort where we first find the maximum element and place the maximum element at the end. We repeat the same process for remaining element.


## Insertion Sort
Insertion sort is a simple sorting algorithm that works the way we sort playing cards in our hands.

    
## Merge Sort
Like QuickSort, Merge Sort is a Divide and Conquer algorithm. It divides input array in two halves, calls itself for the two halves and then merges the two sorted halves. The merge() function is used for merging two halves. The merge(arr, l, m, r) is key process that assumes that arr[l..m] and arr[m+1..r] are sorted and merges the two sorted sub-arrays into one.


## Quick Sort
Like Merge Sort, QuickSort is a Divide and Conquer algorithm. It picks an element as pivot and partitions the given array around the picked pivot. There are many different versions of quickSort that pick pivot in different ways.

-Always pick first element as pivot.
-Always pick last element as pivot (implemented below)
-Pick a random element as pivot.
-Pick median as pivot.

## Selection Sort
The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array.

1) The subarray which is already sorted.
2) Remaining subarray which is unsorted.
